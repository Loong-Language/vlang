//===--- TokenKinds.def - C Family Token Kind Database ----------*- C++ -*-===//
//
//                     The LLVM Compiler Infrastructure
//
// This file is distributed under the University of Illinois Open Source
// License. See LICENSE.TXT for details.
//
//===----------------------------------------------------------------------===//
//
// This file defines the TokenKind database.  This includes normal tokens like
// tok::ampamp (corresponding to the && token) as well as keywords for various
// languages.  Users of this file must optionally #define the TOK, KEYWORD,
// ALIAS, or PPKEYWORD macros to make use of this file.
//
//===----------------------------------------------------------------------===//

#ifndef TOK
#define TOK(X)
#endif
#ifndef PUNCTUATOR
#define PUNCTUATOR(X,Y) TOK(X)
#endif
#ifndef KEYWORD
#define KEYWORD(X,Y) TOK(kw_ ## X)
#endif
#ifndef CDKEYWORD
#define CDKEYWORD(X,Y) TOK(cd_ ## X)
#endif

//===----------------------------------------------------------------------===//
// Preprocessor keywords.
//===----------------------------------------------------------------------===//

//===----------------------------------------------------------------------===//
// Language keywords.
//===----------------------------------------------------------------------===//

// These define members of the tok::* namespace.
TOK(unknown)             // Not a token.
TOK(eof)                 // End of file.
TOK(identifier)          // abcde123
TOK(numeric_constant)    // 123
TOK(numeric_constant_xz) // 12x4 or 12z4
TOK(string_literal)      // "foo"
TOK(comment)             // // <comment>
TOK(comment_block)       // /* <comment> */
TOK(whitespace)          // whitespace
TOK(newline)             // newline
TOK(attribute)           // (* <attribute> *)

// These depend on what type of signal comes next
PUNCTUATOR(and_and,                 "&&")
PUNCTUATOR(or_or,                   "||")
PUNCTUATOR(xor_xor,                 "^^")
PUNCTUATOR(invert_and,              "~&")
PUNCTUATOR(invert_or,               "~|")
PUNCTUATOR(invert_xor,              "~^")
PUNCTUATOR(invert_xor2,             "^~")
PUNCTUATOR(invert_equal,            "!=")
PUNCTUATOR(plus_equal,              "+=")
PUNCTUATOR(minus_equal,             "-=")
PUNCTUATOR(divide_equal,            "/=")
PUNCTUATOR(multiply_equal,          "*=")
PUNCTUATOR(modulo_equal,            "%=")
PUNCTUATOR(and_equal,               "&=")
PUNCTUATOR(or_equal,                "|=")
PUNCTUATOR(xor_equal,               "^=")
PUNCTUATOR(colon_equal,             ":=")
PUNCTUATOR(colon_divide,            ":/")
PUNCTUATOR(greater_greater_equal,   ">>=")
PUNCTUATOR(less_less_equal,         "<<=")
PUNCTUATOR(greater_greater_greater_equal, ">>>=")
PUNCTUATOR(less_less_less_equal,    "<<<=")
PUNCTUATOR(star_star,               "**")
PUNCTUATOR(greater_greater,         ">>")
PUNCTUATOR(less_less,               "<<")
PUNCTUATOR(greater_greater_greater, ">>>")
PUNCTUATOR(less_less_less,          "<<<")
PUNCTUATOR(less_minus_greater,      "<->")
PUNCTUATOR(greater_equal,           ">=")
PUNCTUATOR(less_equal,              "<=")
PUNCTUATOR(equal_equal,             "==")
PUNCTUATOR(equal_equal_equal,       "===")
PUNCTUATOR(invert_equal_equal,      "!==")
PUNCTUATOR(equal_equal_question,    "==?")
PUNCTUATOR(invert_equal_question,   "!=?")
PUNCTUATOR(plus_plus,               "++")
PUNCTUATOR(minus_minus,             "--")
PUNCTUATOR(equal_greater,           "=>")
PUNCTUATOR(l_paren_star,            "(*")
PUNCTUATOR(r_paren_star,            "*)")
PUNCTUATOR(implication,             "->")
PUNCTUATOR(implication_nonblock,    "->>")
PUNCTUATOR(colon_colon,             "::")

TOK(base_binary)         // '[bB]
TOK(base_decimal)        // '[dD]
TOK(base_oct)            // '[oO]
TOK(base_hex)            // '[hH]
TOK(base_signed_binary)  // '[sS][bB]
TOK(base_signed_decimal) // '[sS][dD]
TOK(base_signed_oct)     // '[sS][oO]
TOK(base_signed_hex)     // '[sS][hH]

TOK(define_value)        // value of `define
TOK(define_name)         // Name of `define

// Punctuations
PUNCTUATOR(semicolon,           ";")
PUNCTUATOR(l_square,            "[")
PUNCTUATOR(r_square,            "]")
PUNCTUATOR(l_paren,             "(")
PUNCTUATOR(r_paren,             ")")
PUNCTUATOR(l_brace,             "{")
PUNCTUATOR(r_brace,             "}")
PUNCTUATOR(period,              ".")
PUNCTUATOR(bit_and,             "&")
PUNCTUATOR(multiply,            "*")
PUNCTUATOR(divide,              "/")
PUNCTUATOR(plus,                "+")
PUNCTUATOR(minus,               "-")
PUNCTUATOR(invert,              "~")
PUNCTUATOR(logic_not,           "!")
PUNCTUATOR(modulo,              "%")
PUNCTUATOR(less,                "<")
PUNCTUATOR(greater,             ">")
PUNCTUATOR(bit_xor,             "^")
PUNCTUATOR(bit_or,              "|")
PUNCTUATOR(conditional,         "?")
PUNCTUATOR(colon,               ":")
PUNCTUATOR(semi,                ";")
PUNCTUATOR(equal,               "=")
PUNCTUATOR(comma,               ",")
PUNCTUATOR(at,                  "@")
PUNCTUATOR(apostrophe,          "'")
PUNCTUATOR(dollar,              "$")
PUNCTUATOR(quote,               "\"")
PUNCTUATOR(pound,               "#")
PUNCTUATOR(tick,                "`")
PUNCTUATOR(single_quote,        "'")

KEYWORD(accept_on,              KEYSV)
KEYWORD(alias,                  KEYSV)
KEYWORD(always,                 KEYALL)
KEYWORD(always_comb,            KEYSV)
KEYWORD(always_ff,              KEYSV)
KEYWORD(always_latch,           KEYSV)
KEYWORD(and,                    KEYALL)
KEYWORD(assert,                 KEYSV)
KEYWORD(assign,                 KEYALL)
KEYWORD(assume,                 KEYSV)
KEYWORD(automatic,              KEYALL)
KEYWORD(before,                 KEYSV)
KEYWORD(begin,                  KEYALL)
KEYWORD(bind,                   KEYSV)
KEYWORD(bins,                   KEYSV)
KEYWORD(binsof,                 KEYSV)
KEYWORD(bit,                    KEYSV)
KEYWORD(break,                  KEYSV)
KEYWORD(buf,                    KEYALL)
KEYWORD(bufif0,                 KEYALL)
KEYWORD(bufif1,                 KEYALL)
KEYWORD(byte,                   KEYSV)
KEYWORD(case,                   KEYALL)
KEYWORD(casex,                  KEYALL)
KEYWORD(casez,                  KEYALL)
KEYWORD(cell,                   KEYALL)
KEYWORD(chandle,                KEYSV)
KEYWORD(checker,                KEYSV)
KEYWORD(class,                  KEYSV)
KEYWORD(clocking,               KEYSV)
KEYWORD(cmos,                   KEYALL)
KEYWORD(config,                 KEYALL)
KEYWORD(const,                  KEYSV)
KEYWORD(constraint,             KEYSV)
KEYWORD(context,                KEYSV)
KEYWORD(continue,               KEYSV)
KEYWORD(cover,                  KEYSV)
KEYWORD(covergroup,             KEYSV)
KEYWORD(coverpoint,             KEYSV)
KEYWORD(cross,                  KEYSV)
KEYWORD(deassign,               KEYALL)
KEYWORD(default,                KEYALL)
KEYWORD(defparam,               KEYALL)
KEYWORD(design,                 KEYALL)
KEYWORD(disable,                KEYALL)
KEYWORD(dist,                   KEYSV)
KEYWORD(do,                     KEYSV)
KEYWORD(edge,                   KEYALL)
KEYWORD(else,                   KEYALL)
KEYWORD(end,                    KEYALL)
KEYWORD(endcase,                KEYALL)
KEYWORD(endchecker,             KEYSV)
KEYWORD(endclass,               KEYSV)
KEYWORD(endclocking,            KEYSV)
KEYWORD(endconfig,              KEYALL)
KEYWORD(endfunction,            KEYALL)
KEYWORD(endgenerate,            KEYALL)
KEYWORD(endgroup,               KEYSV)
KEYWORD(endinterface,           KEYSV)
KEYWORD(endmodule,              KEYALL)
KEYWORD(endpackage,             KEYSV)
KEYWORD(endprimitive,           KEYALL)
KEYWORD(endprogram,             KEYSV)
KEYWORD(endproperty,            KEYSV)
KEYWORD(endspecify,             KEYALL)
KEYWORD(endsequence,            KEYSV)
KEYWORD(endtable,               KEYALL)
KEYWORD(endtask,                KEYALL)
KEYWORD(enum,                   KEYSV)
KEYWORD(event,                  KEYALL)
KEYWORD(eventually,             KEYSV)
KEYWORD(expect,                 KEYSV)
KEYWORD(export,                 KEYSV)
KEYWORD(extends,                KEYSV)
KEYWORD(extern,                 KEYSV)
KEYWORD(final,                  KEYSV)
KEYWORD(first_match,            KEYSV)
KEYWORD(for,                    KEYALL)
KEYWORD(force,                  KEYALL)
KEYWORD(foreach,                KEYSV)
KEYWORD(forever,                KEYALL)
KEYWORD(fork,                   KEYALL)
KEYWORD(forkjoin,               KEYSV)
KEYWORD(function,               KEYALL)
KEYWORD(generate,               KEYALL)
KEYWORD(genvar,                 KEYALL)
KEYWORD(global,                 KEYSV)
KEYWORD(highz0,                 KEYALL)
KEYWORD(highz1,                 KEYALL)
KEYWORD(if,                     KEYALL)
KEYWORD(iff,                    KEYSV)
KEYWORD(ifnone,                 KEYALL)
KEYWORD(ignore_bins,            KEYSV)
KEYWORD(illegal_bins,           KEYSV)
KEYWORD(implies,                KEYSV)
KEYWORD(import,                 KEYSV)
KEYWORD(incdir,                 KEYALL)
KEYWORD(include,                KEYALL)
KEYWORD(initial,                KEYALL)
KEYWORD(inout,                  KEYALL)
KEYWORD(input,                  KEYALL)
KEYWORD(inside,                 KEYSV)
KEYWORD(instance,               KEYALL)
KEYWORD(int,                    KEYSV)
KEYWORD(integer,                KEYALL)
KEYWORD(interface,              KEYSV)
KEYWORD(intersect,              KEYSV)
KEYWORD(join,                   KEYALL)
KEYWORD(join_any,               KEYSV)
KEYWORD(join_none,              KEYSV)
KEYWORD(large,                  KEYALL)
KEYWORD(let,                    KEYSV)
KEYWORD(liblist,                KEYALL)
KEYWORD(library,                KEYALL)
KEYWORD(local,                  KEYSV)
KEYWORD(localparam,             KEYALL)
KEYWORD(logic,                  KEYSV)
KEYWORD(longint,                KEYSV)
KEYWORD(macromodule,            KEYALL)
KEYWORD(matches,                KEYSV)
KEYWORD(medium,                 KEYALL)
KEYWORD(modport,                KEYSV)
KEYWORD(module,                 KEYALL)
KEYWORD(nand,                   KEYALL)
KEYWORD(negedge,                KEYALL)
KEYWORD(new,                    KEYSV)
KEYWORD(nexttime,               KEYSV)
KEYWORD(nmos,                   KEYALL)
KEYWORD(nor,                    KEYALL)
KEYWORD(noshowcancelled,        KEYALL)
KEYWORD(not,                    KEYALL)
KEYWORD(notif0,                 KEYALL)
KEYWORD(notif1,                 KEYALL)
KEYWORD(null,                   KEYSV)
KEYWORD(or,                     KEYALL)
KEYWORD(output,                 KEYALL)
KEYWORD(package,                KEYSV)
KEYWORD(packed,                 KEYSV)
KEYWORD(parameter,              KEYALL)
KEYWORD(pmos,                   KEYALL)
KEYWORD(posedge,                KEYALL)
KEYWORD(primitive,              KEYALL)
KEYWORD(priority,               KEYSV)
KEYWORD(program,                KEYSV)
KEYWORD(property,               KEYSV)
KEYWORD(protected,              KEYSV)
KEYWORD(pull0,                  KEYALL)
KEYWORD(pull1,                  KEYALL)
KEYWORD(pulldown,               KEYALL)
KEYWORD(pullup,                 KEYALL)
KEYWORD(pulsestyle_ondetect,    KEYALL)
KEYWORD(pulsestyle_onevent,     KEYALL)
KEYWORD(pure,                   KEYSV)
KEYWORD(rand,                   KEYSV)
KEYWORD(randc,                  KEYSV)
KEYWORD(randcase,               KEYSV)
KEYWORD(randsequence,           KEYSV)
KEYWORD(rcmos,                  KEYALL)
KEYWORD(real,                   KEYALL)
KEYWORD(realtime,               KEYALL)
KEYWORD(ref,                    KEYSV)
KEYWORD(reg,                    KEYALL)
KEYWORD(reject_on,              KEYSV)
KEYWORD(release,                KEYALL)
KEYWORD(repeat,                 KEYALL)
KEYWORD(restrict,               KEYSV)
KEYWORD(return,                 KEYSV)
KEYWORD(rnmos,                  KEYALL)
KEYWORD(rpmos,                  KEYALL)
KEYWORD(rtran,                  KEYALL)
KEYWORD(rtranif0,               KEYALL)
KEYWORD(rtranif1,               KEYALL)
KEYWORD(s_always,               KEYSV)
KEYWORD(s_eventually,           KEYSV)
KEYWORD(s_nexttime,             KEYSV)
KEYWORD(s_until,                KEYSV)
KEYWORD(s_until_with,           KEYSV)
KEYWORD(scalared,               KEYALL)
KEYWORD(sequence,               KEYSV)
KEYWORD(shortint,               KEYSV)
KEYWORD(shortreal,              KEYSV)
KEYWORD(showcancelled,          KEYALL)
KEYWORD(signed,                 KEYALL)
KEYWORD(small,                  KEYALL)
KEYWORD(solve,                  KEYSV)
KEYWORD(specify,                KEYALL)
KEYWORD(specparam,              KEYALL)
KEYWORD(static,                 KEYSV)
KEYWORD(string,                 KEYSV)
KEYWORD(strong,                 KEYSV)
KEYWORD(strong0,                KEYALL)
KEYWORD(strong1,                KEYALL)
KEYWORD(struct,                 KEYSV)
KEYWORD(super,                  KEYSV)
KEYWORD(supply0,                KEYALL)
KEYWORD(supply1,                KEYALL)
KEYWORD(sync_accept_on,         KEYSV)
KEYWORD(sync_reject_on,         KEYSV)
KEYWORD(table,                  KEYALL)
KEYWORD(tagged,                 KEYSV)
KEYWORD(task,                   KEYALL)
KEYWORD(this,                   KEYSV)
KEYWORD(throughout,             KEYSV)
KEYWORD(time,                   KEYALL)
KEYWORD(timeprecision,          KEYSV)
KEYWORD(timeunit,               KEYSV)
KEYWORD(tran,                   KEYALL)
KEYWORD(tranif0,                KEYALL)
KEYWORD(tranif1,                KEYALL)
KEYWORD(tri,                    KEYALL)
KEYWORD(tri0,                   KEYALL)
KEYWORD(tri1,                   KEYALL)
KEYWORD(triand,                 KEYALL)
KEYWORD(trior,                  KEYALL)
KEYWORD(trireg,                 KEYALL)
KEYWORD(type,                   KEYSV)
KEYWORD(typedef,                KEYSV)
KEYWORD(union,                  KEYSV)
KEYWORD(unique,                 KEYSV)
KEYWORD(unique0,                KEYSV)
KEYWORD(unsigned,               KEYALL)
KEYWORD(until,                  KEYSV)
KEYWORD(until_with,             KEYSV)
KEYWORD(untyped,                KEYSV)
KEYWORD(use,                    KEYALL)
KEYWORD(uwire,                  KEYSV)
KEYWORD(var,                    KEYSV)
KEYWORD(vectored,               KEYALL)
KEYWORD(virtual,                KEYSV)
KEYWORD(void,                   KEYSV)
KEYWORD(wait,                   KEYALL)
KEYWORD(wait_order,             KEYSV)
KEYWORD(wand,                   KEYALL)
KEYWORD(weak,                   KEYSV)
KEYWORD(weak0,                  KEYALL)
KEYWORD(weak1,                  KEYALL)
KEYWORD(while,                  KEYALL)
KEYWORD(wildcard,               KEYSV)
KEYWORD(wire,                   KEYALL)
KEYWORD(with,                   KEYSV)
KEYWORD(within,                 KEYSV)
KEYWORD(wor,                    KEYALL)
KEYWORD(xnor,                   KEYALL)
KEYWORD(xor,                    KEYALL)

// System tasks - Simulation control
TOK(systask)

// Compiler directives
CDKEYWORD( __FILE__,       "`__FILE__")
CDKEYWORD( __LINE__,        "`__LINE__")
CDKEYWORD( begin_keywords, "`begin_keywords")
CDKEYWORD( celldefine,     "`celldefine")
CDKEYWORD( define,         "`define")
CDKEYWORD( timescale,      "`timescale")
CDKEYWORD( include,        "`include")
CDKEYWORD( ifdef,          "`ifdef")
CDKEYWORD( else,           "`else")
CDKEYWORD( endif,          "`endif")

#undef CDKEYWORD
#undef KEYWORD
#undef PUNCTUATOR
#undef TOK

