//===--- TokenKinds.def - C Family Token Kind Database ----------*- C++ -*-===//
//
//                     The LLVM Compiler Infrastructure
//
// This file is distributed under the University of Illinois Open Source
// License. See LICENSE.TXT for details.
//
//===----------------------------------------------------------------------===//
//
// This file defines the TokenKind database.  This includes normal tokens like
// tok::ampamp (corresponding to the && token) as well as keywords for various
// languages.  Users of this file must optionally #define the TOK, KEYWORD,
// ALIAS, or PPKEYWORD macros to make use of this file.
//
//===----------------------------------------------------------------------===//

#ifndef TOK
#define TOK(X)
#endif
#ifndef PUNCTUATOR
#define PUNCTUATOR(X,Y) TOK(X)
#endif
#ifndef KEYWORD
#define KEYWORD(X,Y) TOK(kw_ ## X)
#endif
#ifndef ALIAS
#define ALIAS(X,Y,Z)
#endif
#ifndef PPKEYWORD
#define PPKEYWORD(X, Y) TOK(pp_ ## X)
#endif
#ifndef TESTING_KEYWORD
#define TESTING_KEYWORD(X, L) KEYWORD(X, L)
#endif
#ifndef ANNOTATION
#define ANNOTATION(X) TOK(annot_ ## X)
#endif

//===----------------------------------------------------------------------===//
// Preprocessor keywords.
//===----------------------------------------------------------------------===//

// These have meaning after a '`' at the start of a line. These define enums in
// the tok::pp_* namespace.  Note that IdentifierInfo::getPPKeywordID must be
// manually updated if something is added here.


// Flags allowed:
//   KEYALL   - This is a keyword introduced to Verilog in IEEE-1364 2001
//   KEYV2005 - This is a keyword introduced to Verilog in IEEE-1364 2005
//   KEYSV2005- This is a keyword introduced to System Verilog in IEEE-1800 2005
//   KEYSV2009- This is a keyword introduced to System Verilog in IEEE-1800 2009
//   KEYSV2012- This is a keyword introduced to System Verilog in IEEE-1800 2012
PPKEYWORD(not_keyword,     KEYALL)

// Cell definition
PPKEYWORD(celldefine,      KEYALL) //  IEEE-1364 2001 19.1
PPKEYWORD(endcelldefine,   KEYALL) //  IEEE-1364 2001 19.1

// Sets default nettype
PPKEYWORD(default_nettype, KEYALL) //  IEEE-1364 2001 19.2

// Macro definition
PPKEYWORD(define,          KEYALL) //  IEEE-1364 2001 19.3
PPKEYWORD(undef,           KEYALL) //  IEEE-1364 2001 19.3

// Conditional compilation
PPKEYWORD(ifdef,           KEYALL)  // IEEE-1364 2001 19.4
PPKEYWORD(ifndef,          KEYALL)  // IEEE-1364 2001 19.4
PPKEYWORD(elsif,           KEYALL)  // IEEE-1364 2001 19.4
PPKEYWORD(else,            KEYALL)  // IEEE-1364 2001 19.4
PPKEYWORD(endif,           KEYALL)  // IEEE-1364 2001 19.4

// File inclusion
PPKEYWORD(include,         KEYALL)  // IEEE-1364 2001 19.5

// Time unit/precision definitions
PPKEYWORD(timescale,       KEYALL)  // IEEE-1364 2001 19.8

//===----------------------------------------------------------------------===//
// Language keywords.
//===----------------------------------------------------------------------===//

// These define members of the tok::* namespace.

TOK(unknown)             // Not a token.
TOK(eof)                 // End of file.
TOK(eod)                 // End of preprocessing directive (end of line inside a
                         // directive).
TOK(code_completion)     // Code completion marker

// C99 6.4.9: Comments.
TOK(comment)             // Comment (only in -E -C[C] mode)

// C99 6.4.2: Identifiers.
TOK(identifier)          // abcde123
TOK(raw_identifier)      // Used only in raw lexing mode.

TOK(numeric_constant)    // 123
TOK(numeric_constant_xz) // 2x3

// Strings
TOK(string_literal)      // "foo"

// Base values
TOK(base_signed_binary)
TOK(base_signed_decimal)
TOK(base_signed_oct)
TOK(base_signed_hex)
TOK(base_binary)
TOK(base_decimal)
TOK(base_oct)
TOK(base_hex)

// Operators
PUNCTUATOR(l_square,            "[")
PUNCTUATOR(r_square,            "]")
PUNCTUATOR(l_paren,             "(")
PUNCTUATOR(r_paren,             ")")
PUNCTUATOR(l_brace,             "{")
PUNCTUATOR(r_brace,             "}")

PUNCTUATOR(period,              ".")

PUNCTUATOR(amp,                 "&")
PUNCTUATOR(ampamp,              "&&")
PUNCTUATOR(ampampamp,           "&&&")
PUNCTUATOR(ampequal,            "&=")

PUNCTUATOR(star,                "*")
PUNCTUATOR(starequal,           "*=")
PUNCTUATOR(starstar,            "**")

PUNCTUATOR(plus,                "+")
PUNCTUATOR(plusplus,            "++")
PUNCTUATOR(plusequal,           "+=")

PUNCTUATOR(minus,               "-")
PUNCTUATOR(arrow,               "->")
PUNCTUATOR(minusminus,          "--")
PUNCTUATOR(minusequal,          "-=")

PUNCTUATOR(tilde,               "~")
PUNCTUATOR(tildecaret,          "~^")
PUNCTUATOR(tildepipe,           "~|")
PUNCTUATOR(tildeamp,            "~&")

PUNCTUATOR(exclaim,             "!")
PUNCTUATOR(exclaimequal,        "!=")
PUNCTUATOR(exclaimequalequal,   "!==")
PUNCTUATOR(exclaimequalquestion,"!=?")

PUNCTUATOR(slash,               "/")
PUNCTUATOR(slashequal,          "/=")

PUNCTUATOR(percent,             "%")
PUNCTUATOR(percentequal,        "%=")

PUNCTUATOR(less,                "<")
PUNCTUATOR(lessless,            "<<")
PUNCTUATOR(lesslessless,        "<<<")
PUNCTUATOR(lessequal,           "<=")
PUNCTUATOR(lesslessequal,       "<<=")
PUNCTUATOR(lesslesslessequal,   "<<<=")
PUNCTUATOR(lessminusgreater,    "<->")

PUNCTUATOR(greater,             ">")
PUNCTUATOR(greatergreater,      ">>")
PUNCTUATOR(greatergreatergreater, ">>>")
PUNCTUATOR(greaterequal,        ">=")
PUNCTUATOR(greatergreaterequal, ">>=")
PUNCTUATOR(greatergreatergreaterequal, ">>>=")

PUNCTUATOR(caret,               "^")
PUNCTUATOR(caretequal,          "^=")
PUNCTUATOR(caretcaret,          "^^")
PUNCTUATOR(carettilde,          "^~")

PUNCTUATOR(pipe,                "|")
PUNCTUATOR(pipepipe,            "||")
PUNCTUATOR(pipeequal,           "|=")

PUNCTUATOR(question,            "?")

PUNCTUATOR(colon,               ":")
PUNCTUATOR(coloncolon,          "::")
PUNCTUATOR(colonequal,          ":=")
PUNCTUATOR(colonslash,          ":/")

PUNCTUATOR(semi,                ";")

PUNCTUATOR(equal,               "=")
PUNCTUATOR(equalequal,          "==")
PUNCTUATOR(equalequalequal,     "===")
PUNCTUATOR(equalequalquestion,  "==?")
PUNCTUATOR(equalgreater,        "=>")

PUNCTUATOR(comma,               ",")
PUNCTUATOR(hash,                "#")
PUNCTUATOR(at,                  "@")
PUNCTUATOR(quote,               "'")
PUNCTUATOR(dollar,              "$")
PUNCTUATOR(tick,                "`")

// Flags allowed:
//   KEYALL   - This is a keyword introduced to Verilog in IEEE-1364 2001
//   KEYV2005 - This is a keyword introduced to Verilog in IEEE-1364 2005
//   KEYSV2005- This is a keyword introduced to System Verilog in IEEE-1800 2005
//   KEYSV2009- This is a keyword introduced to System Verilog in IEEE-1800 2009
//   KEYSV2012- This is a keyword introduced to System Verilog in IEEE-1800 2012


KEYWORD(accept_on,              KEYSV2009)
KEYWORD(alias,                  KEYSV2005)
KEYWORD(always,                 KEYALL)
KEYWORD(always_comb,            KEYSV2005)
KEYWORD(always_ff,              KEYSV2005)
KEYWORD(always_latch,           KEYSV2005)
KEYWORD(and,                    KEYALL)
KEYWORD(assert,                 KEYSV2005)
KEYWORD(assign,                 KEYALL)
KEYWORD(assume,                 KEYSV2005)
KEYWORD(attribute,              KEYALL)
KEYWORD(automatic,              KEYALL)
KEYWORD(before,                 KEYSV2005)
KEYWORD(begin,                  KEYALL)
KEYWORD(bind,                   KEYSV2005)
KEYWORD(bins,                   KEYSV2005)
KEYWORD(binsof,                 KEYSV2005)
KEYWORD(bit,                    KEYSV2005)
KEYWORD(break,                  KEYSV2005)
KEYWORD(buf,                    KEYALL)
KEYWORD(bufif0,                 KEYALL)
KEYWORD(bufif1,                 KEYALL)
KEYWORD(byte,                   KEYSV2005)
KEYWORD(case,                   KEYALL)
KEYWORD(casex,                  KEYALL)
KEYWORD(casez,                  KEYALL)
KEYWORD(cell,                   KEYALL)
KEYWORD(chandle,                KEYSV2005)
KEYWORD(checker,                KEYSV2009)
KEYWORD(class,                  KEYSV2005)
KEYWORD(clocking,               KEYSV2005)
KEYWORD(cmos,                   KEYALL)
KEYWORD(config,                 KEYALL)
KEYWORD(const,                  KEYSV2005)
KEYWORD(constraint,             KEYSV2005)
KEYWORD(context,                KEYSV2005)
KEYWORD(continue,               KEYSV2005)
KEYWORD(cover,                  KEYSV2005)
KEYWORD(covergroup,             KEYSV2005)
KEYWORD(coverpoint,             KEYSV2005)
KEYWORD(cross,                  KEYSV2005)
KEYWORD(deassign,               KEYALL)
KEYWORD(default,                KEYALL)
KEYWORD(defparam,               KEYALL)
KEYWORD(design,                 KEYALL)
KEYWORD(disable,                KEYALL)
KEYWORD(dist,                   KEYSV2005)
KEYWORD(do,                     KEYSV2005)
KEYWORD(edge,                   KEYALL)
KEYWORD(else,                   KEYALL)
KEYWORD(end,                    KEYALL)
KEYWORD(endattribute,           KEYALL)
KEYWORD(endcase,                KEYALL)
KEYWORD(endchecker,             KEYSV2009)
KEYWORD(endclass,               KEYSV2005)
KEYWORD(endclocking,            KEYSV2005)
KEYWORD(endconfig,              KEYALL)
KEYWORD(endfunction,            KEYALL)
KEYWORD(endgenerate,            KEYALL)
KEYWORD(endgroup,               KEYSV2005)
KEYWORD(endinterface,           KEYSV2005)
KEYWORD(endmodule,              KEYALL)
KEYWORD(endpackage,             KEYSV2005)
KEYWORD(endprimitive,           KEYALL)
KEYWORD(endprogram,             KEYSV2005)
KEYWORD(endproperty,            KEYSV2005)
KEYWORD(endspecify,             KEYALL)
KEYWORD(endsequence,            KEYSV2005)
KEYWORD(endtable,               KEYALL)
KEYWORD(endtask,                KEYALL)
KEYWORD(enum,                   KEYSV2005)
KEYWORD(event,                  KEYALL)
KEYWORD(eventually,             KEYSV2009)
KEYWORD(expect,                 KEYSV2005)
KEYWORD(export,                 KEYSV2005)
KEYWORD(extends,                KEYSV2005)
KEYWORD(extern,                 KEYSV2005)
KEYWORD(final,                  KEYSV2005)
KEYWORD(first_match,            KEYSV2005)
KEYWORD(for,                    KEYALL)
KEYWORD(force,                  KEYALL)
KEYWORD(foreach,                KEYSV2005)
KEYWORD(forever,                KEYALL)
KEYWORD(fork,                   KEYALL)
KEYWORD(forkjoin,               KEYSV2005)
KEYWORD(function,               KEYALL)
KEYWORD(generate,               KEYALL)
KEYWORD(genvar,                 KEYALL)
KEYWORD(global,                 KEYSV2009)
KEYWORD(highz0,                 KEYALL)
KEYWORD(highz1,                 KEYALL)
KEYWORD(if,                     KEYALL)
KEYWORD(iff,                    KEYSV2005)
KEYWORD(ifnone,                 KEYALL)
KEYWORD(ignore_bins,            KEYSV2005)
KEYWORD(illegal_bins,           KEYSV2005)
KEYWORD(implements,             KEYSV2012)
KEYWORD(implies,                KEYSV2009)
KEYWORD(import,                 KEYSV2005)
KEYWORD(incdir,                 KEYV2005)
KEYWORD(include,                KEYV2005)
KEYWORD(initial,                KEYALL)
KEYWORD(inout,                  KEYALL)
KEYWORD(input,                  KEYALL)
KEYWORD(inside,                 KEYSV2005)
KEYWORD(instance,               KEYALL)
KEYWORD(int,                    KEYSV2005)
KEYWORD(integer,                KEYALL)
KEYWORD(interconnect,           KEYSV2012)
KEYWORD(interface,              KEYSV2005)
KEYWORD(intersect,              KEYSV2005)
KEYWORD(join,                   KEYALL)
KEYWORD(join_any,               KEYSV2005)
KEYWORD(join_none,              KEYSV2005)
KEYWORD(large,                  KEYALL)
KEYWORD(let,                    KEYSV2009)
KEYWORD(liblist,                KEYALL)
KEYWORD(library,                KEYV2005)
KEYWORD(local,                  KEYSV2005)
KEYWORD(localparam,             KEYALL)
KEYWORD(logic,                  KEYSV2005)
KEYWORD(longint,                KEYSV2005)
KEYWORD(macromodule,            KEYALL)
KEYWORD(matches,                KEYSV2005)
KEYWORD(medium,                 KEYALL)
KEYWORD(modport,                KEYSV2005)
KEYWORD(module,                 KEYALL)
KEYWORD(nand,                   KEYALL)
KEYWORD(negedge,                KEYALL)
KEYWORD(nettype,                KEYSV2012)
KEYWORD(new,                    KEYSV2005)
KEYWORD(nexttime,               KEYSV2009)
KEYWORD(nmos,                   KEYALL)
KEYWORD(nor,                    KEYALL)
KEYWORD(noshowcancelled,        KEYALL)
KEYWORD(not,                    KEYALL)
KEYWORD(notif0,                 KEYALL)
KEYWORD(notif1,                 KEYALL)
KEYWORD(null,                   KEYSV2005)
KEYWORD(or,                     KEYALL)
KEYWORD(output,                 KEYALL)
KEYWORD(package,                KEYSV2005)
KEYWORD(packed,                 KEYSV2005)
KEYWORD(parameter,              KEYALL)
KEYWORD(pmos,                   KEYALL)
KEYWORD(posedge,                KEYALL)
KEYWORD(primitive,              KEYALL)
KEYWORD(priority,               KEYSV2005)
KEYWORD(program,                KEYSV2005)
KEYWORD(property,               KEYSV2005)
KEYWORD(protected,              KEYSV2005)
KEYWORD(pull0,                  KEYALL)
KEYWORD(pull1,                  KEYALL)
KEYWORD(pulldown,               KEYALL)
KEYWORD(pullup,                 KEYALL)
KEYWORD(pulsestyle_ondetect,    KEYALL)
KEYWORD(pulsestyle_onevent,     KEYALL)
KEYWORD(pure,                   KEYSV2005)
KEYWORD(rand,                   KEYSV2005)
KEYWORD(randc,                  KEYSV2005)
KEYWORD(randcase,               KEYSV2005)
KEYWORD(randsequence,           KEYSV2005)
KEYWORD(rcmos,                  KEYALL)
KEYWORD(real,                   KEYALL)
KEYWORD(realtime,               KEYALL)
KEYWORD(ref,                    KEYSV2005)
KEYWORD(reg,                    KEYALL)
KEYWORD(reject_on,              KEYSV2009)
KEYWORD(release,                KEYALL)
KEYWORD(repeat,                 KEYALL)
KEYWORD(restrict,               KEYSV2009)
KEYWORD(return,                 KEYSV2005)
KEYWORD(rnmos,                  KEYALL)
KEYWORD(rpmos,                  KEYALL)
KEYWORD(rtran,                  KEYALL)
KEYWORD(rtranif0,               KEYALL)
KEYWORD(rtranif1,               KEYALL)
KEYWORD(s_always,               KEYSV2009)
KEYWORD(s_eventually,           KEYSV2009)
KEYWORD(s_nexttime,             KEYSV2009)
KEYWORD(s_until,                KEYSV2009)
KEYWORD(s_until_with,           KEYSV2009)
KEYWORD(scalared,               KEYALL)
KEYWORD(sequence,               KEYSV2005)
KEYWORD(shortint,               KEYSV2005)
KEYWORD(shortreal,              KEYSV2005)
KEYWORD(showcancelled,          KEYALL)
KEYWORD(signed,                 KEYALL)
KEYWORD(small,                  KEYALL)
KEYWORD(soft,                   KEYSV2012)
KEYWORD(solve,                  KEYSV2005)
KEYWORD(specify,                KEYALL)
KEYWORD(specparam,              KEYALL)
KEYWORD(static,                 KEYSV2005)
KEYWORD(string,                 KEYSV2005)
KEYWORD(strong,                 KEYSV2005)
KEYWORD(strong0,                KEYALL)
KEYWORD(strong1,                KEYALL)
KEYWORD(struct,                 KEYSV2005)
KEYWORD(super,                  KEYSV2005)
KEYWORD(supply0,                KEYALL)
KEYWORD(supply1,                KEYALL)
KEYWORD(sync_accept_on,         KEYSV2009)
KEYWORD(sync_reject_on,         KEYSV2009)
KEYWORD(table,                  KEYALL)
KEYWORD(tagged,                 KEYSV2005)
KEYWORD(task,                   KEYALL)
KEYWORD(this,                   KEYSV2005)
KEYWORD(throughout,             KEYSV2005)
KEYWORD(time,                   KEYALL)
KEYWORD(timeprecision,          KEYSV2005)
KEYWORD(timeunit,               KEYSV2005)
KEYWORD(tran,                   KEYALL)
KEYWORD(tranif0,                KEYALL)
KEYWORD(tranif1,                KEYALL)
KEYWORD(tri,                    KEYALL)
KEYWORD(tri0,                   KEYALL)
KEYWORD(tri1,                   KEYALL)
KEYWORD(triand,                 KEYALL)
KEYWORD(trior,                  KEYALL)
KEYWORD(trireg,                 KEYALL)
KEYWORD(type,                   KEYSV2005)
KEYWORD(typedef,                KEYSV2005)
KEYWORD(union,                  KEYSV2005)
KEYWORD(unique,                 KEYSV2005)
KEYWORD(unique0,                KEYSV2009)
KEYWORD(unsigned,               KEYALL)
KEYWORD(until,                  KEYSV2009)
KEYWORD(until_with,             KEYSV2009)
KEYWORD(untyped,                KEYSV2009)
KEYWORD(use,                    KEYALL)
KEYWORD(uwire,                  KEYV2005)
KEYWORD(var,                    KEYSV2005)
KEYWORD(vectored,               KEYALL)
KEYWORD(virtual,                KEYSV2005)
KEYWORD(void,                   KEYSV2005)
KEYWORD(wait,                   KEYALL)
KEYWORD(wait_order,             KEYSV2005)
KEYWORD(wand,                   KEYALL)
KEYWORD(weak,                   KEYSV2005)
KEYWORD(weak0,                  KEYALL)
KEYWORD(weak1,                  KEYALL)
KEYWORD(while,                  KEYALL)
KEYWORD(wildcard,               KEYSV2005)
KEYWORD(wire,                   KEYALL)
KEYWORD(with,                   KEYSV2005)
KEYWORD(within,                 KEYSV2005)
KEYWORD(wor,                    KEYALL)
KEYWORD(xnor,                   KEYALL)
KEYWORD(xor,                    KEYALL)

// Vlang-specific keywords enabled only in testing.
TESTING_KEYWORD(__unknown_anytype , KEYALL)

#undef ANNOTATION
#undef TESTING_KEYWORD
#undef PPKEYWORD
#undef ALIAS
#undef KEYWORD
#undef PUNCTUATOR
#undef TOK
